{"version":3,"sources":["assets/img/empty.png","templates/Home.js","features/map/Map.js","helpers.js","features/polls/PollsList.js","features/polls/PlannedPolls.js","features/polls/ArchivedPolls.js","features/search/Select.js","app/api.js","app/config.js","features/search/addressesSlice.js","features/search/index.js","hooks/useInput.js","features/polls/pollsSlice.js","features/polls/NewPollForm.js","features/polls/PollChart.js","features/polls/PollDrawer.js","pages/Home.js","app/App.js","app/rootReducer.js","app/store.js","serviceWorker.js","theme/global.js","theme/default.js","theme/mui.js","index.js"],"names":["module","exports","Page","styled","div","LeftBlock","p","theme","shadows","strong","HomeTemplate","left","children","style","gridArea","overflowY","Map","ReactMapboxGl","accessToken","minZoom","maxZoom","Mark","color","palette","main","lighter","CustomMap","props","addresses","useSelector","list","firstAddress","focusedOption","selectedAddresses","selected","containerStyle","pitch","attributionControl","dragRotate","center","location","coordinates","map","a","key","uuid","getYesterday","d","Date","setDate","getDate","formatDate","date","fullDate","dateOptions","month","day","hour","minute","year","dateObj","isToday","toDateString","isYesterday","toLocaleTimeString","undefined","toLocaleString","icons","pending","Schedule","active","Send","success","Poll","cancelled","CancelScheduleSend","Body","Polls","title","polls","length","Typography","variant","gutterBottom","List","poll","ListItem","button","component","Link","to","ListItemIcon","type","ListItemText","primary","text","secondary","start_date","end_date","primaryTypographyProps","width","overflow","whiteSpace","textOverflow","maxHeight","marginBottom","marginTop","src","empty","alt","CircularProgress","PlannedPolls","plannedPolls","PollsList","Archived","archivedList","MyAsyncSelect","onUserInteracted","Promise","resolve","then","getFocusedOption","isMenuOpen","lastFocusedOption","onFocusedOptionChanged","this","ref","select","state","isFocused","onMouseMove","onClick","onKeyDown","React","Component","api","baseUri","err","status","reject","endpoint","options","omitContentType","console","log","dispatch","BASE_URI","jwt","localStorage","getItem","headers","Headers","Authorization","append","request","Request","credentials","fetch","r","ok","json","catch","_handleError","searchAddresses","createAsyncThunk","q","rejectWithValue","API","response","addressesSlice","createSlice","name","initialState","reducers","selectAddresses","payload","setFocusedOption","extraReducers","fulfilled","normalized","address","b","actions","customStyles","control","styles","padding","border","background","styledTheme","lightgrey","contrastText","fontFamily","fonts","cursor","borderColor","grey","menu","boxShadow","zIndex","input","placeholder","singleValue","data","mapAddresses","label","short_address","value","Search","useTheme","useDispatch","useCallback","option","useEffect","cacheOptions","defaultOptions","isMulti","selectTheme","borderRadius","colors","primary25","onChange","newSelected","action","useInput","initialValue","cb","useState","setValue","reset","bind","event","target","createPoll","method","fetchCurrentPoll","fetchArchivedPolls","fetchPlannedPolls","pollsSlice","current","toast","message","rejected","planneddList","Form","form","ButtonsWrapper","Wrapper","NewPollForm","isNew","setIsNew","startDate","bindStartDate","resetStartDate","endDate","bindEndDate","resetEndDate","pollText","bindPollText","resetPollText","handleSubmit","e","preventDefault","unwrapResult","ret","onSubmit","Collapse","in","visibility","TextField","multiline","fullWidth","marginLeft","InputLabelProps","shrink","margin","marginRight","Button","PollChart","height","top","right","bottom","innerRadius","padAngle","cornerRadius","scheme","borderWidth","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","defs","id","size","stagger","rotation","lineWidth","spacing","fill","x","Math","random","match","legends","anchor","direction","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","ChipWrapper","buttonTexts","PollDrawer","onClose","pollUuid","useParams","history","useHistory","handleActionButtonClick","Drawer","onOpen","open","push","elevation","PaperProps","Chip","clickable","position","IconButton","ArrowBack","HomePage","Home","ArchivedPolls","App","path","combineReducers","store","configureStore","reducer","rootReducer","Boolean","window","hostname","css","darker","gradient","error","buttonPrimary","card","maxWidth","bigFont","mediumFont","smallFont","tinyFont","scale","tablet","screen","bigScreen","wideScreen","MuiTheme","createMuiTheme","typography","light","dark","MuiFilledInput","disableUnderline","MuiTextField","MuiButton","MuiButtonBase","disableRipple","overrides","root","textTransform","contained","MuiTypography","MuiBackdrop","backgroundColor","backdropFilter","MuiDrawer","paper","MuiChip","MuiList","MuiDialogTitle","textAlign","MuiInput","underline","MuiTooltip","tooltip","fontWeight","MuiListItem","MuiTabs","minHeight","scrollable","display","indicator","justifyContent","MuiTab","fontSize","letterSpacing","minWidth","opacity","labelContainer","GlobalStyle","createGlobalStyle","globalStyles","ReactDOM","render","StrictMode","defaultTheme","muiTheme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7176536a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty.805c606f.png\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst Page = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  grid-template-areas: 'left polls';\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 450px;\n  overflow: hidden;\n`\n\nconst LeftBlock = styled.div`\n  position: relative;\n  grid-area: left;\n  display: grid;\n\n  grid-template-areas:\n    'search'\n    'map';\n  grid-template-rows: max-content 1fr;\n  box-shadow: ${(p) => p.theme.shadows.strong};\n`\n\nconst HomeTemplate = ({ left, children }) => (\n  <Page>\n    <LeftBlock>{left}</LeftBlock>\n    <div style={{ gridArea: 'polls', overflowY: 'auto' }}>{children}</div>\n  </Page>\n)\n\nexport default HomeTemplate\n","import React from 'react'\nimport ReactMapboxGl, { Layer, Feature, Marker } from 'react-mapbox-gl'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    'pk.eyJ1Ijoia3Vtb21pIiwiYSI6ImNrMjNjdGhheTA4ZTEzYnFtZTMwbnluY20ifQ.bEFOoXk1dRroA46CblYjNQ',\n  minZoom: 8,\n  maxZoom: 15,\n})\n\nconst Mark = styled.div`\n  background-color: ${({ theme, color = 'secondary' }) =>\n    theme.palette[color].main};\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  border: 4px solid\n    ${({ theme, color = 'secondary' }) => theme.palette[color].lighter};\n`\n\nconst CustomMap = ({ style = {}, ...props }) => {\n  const addresses = useSelector(({ addresses }) => addresses.list)\n  const firstAddress = addresses?.[0]\n  const focusedOption = useSelector(({ addresses }) => addresses.focusedOption)\n\n  const selectedAddresses = useSelector(({ addresses }) => addresses.selected)\n\n  return (\n    <Map\n      /* eslint-disable-next-line */\n      style=\"mapbox://styles/mapbox/light-v10\"\n      containerStyle={style}\n      pitch={[33]}\n      attributionControl={false}\n      dragRotate={false}\n      center={focusedOption?.location || firstAddress?.location}\n      // zoom={[12]}\n      {...props}\n    >\n      {focusedOption && (\n        <Marker coordinates={focusedOption.location}>\n          <Mark color=\"primary\" />\n        </Marker>\n      )}\n      {selectedAddresses.map((a) => (\n        <Marker key={a.uuid} coordinates={a.location}>\n          <Mark />\n        </Marker>\n      ))}\n    </Map>\n  )\n}\n\nexport default CustomMap\n","function getYesterday(d) {\n  return new Date(d.setDate(d.getDate() - 1))\n}\n\nexport const formatDate = (date, fullDate = false) => {\n  const dateOptions = fullDate\n    ? {\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        year: 'numeric',\n      }\n    : {\n        month: '2-digit',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        year: '2-digit',\n      }\n  const dateObj = new Date(date)\n  const isToday = new Date().toDateString() === dateObj.toDateString()\n  const isYesterday =\n    getYesterday(new Date()).toDateString() === dateObj.toDateString()\n\n  return isToday\n    ? `сегодня, ${dateObj.toLocaleTimeString(undefined, {\n        hour: 'numeric',\n        minute: 'numeric',\n      })}`\n    : isYesterday\n    ? `вчера, ${dateObj.toLocaleTimeString(undefined, {\n        hour: 'numeric',\n        minute: 'numeric',\n      })}`\n    : dateObj.toLocaleString(undefined, dateOptions)\n}\n","import React from 'react'\nimport {\n  Typography,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from '@material-ui/core'\nimport { Schedule, Send, Poll, CancelScheduleSend } from '@material-ui/icons'\nimport styled from 'styled-components'\nimport empty from 'assets/img/empty.png'\nimport { formatDate } from 'helpers'\nimport { Link } from 'react-router-dom'\n\nconst icons = {\n  pending: <Schedule color=\"primary\" />,\n  active: <Send color=\"primary\" />,\n  success: <Poll color=\"primary\" />,\n  cancelled: <CancelScheduleSend color=\"error\" />,\n}\n\nconst Body = styled.div`\n  padding: 2rem;\n  padding-bottom: 0;\n`\n\nconst Polls = ({ title, polls, ...props }) => {\n  return (\n    <Body {...props}>\n      {polls ? (\n        polls.length > 0 ? (\n          <>\n            <Typography color=\"primary\" variant=\"h5\" gutterBottom>\n              {title}\n            </Typography>\n            <List>\n              {polls.map((poll) => (\n                <ListItem\n                  button\n                  key={poll.uuid}\n                  component={Link}\n                  to={`/poll/${poll.uuid}`}\n                >\n                  <ListItemIcon>{icons[poll.type]}</ListItemIcon>\n                  <ListItemText\n                    primary={poll.text}\n                    secondary={`${formatDate(poll.start_date)} - ${formatDate(\n                      poll.end_date,\n                    )}`}\n                    primaryTypographyProps={{\n                      style: {\n                        width: '100%',\n                        overflow: 'hidden',\n                        whiteSpace: 'nowrap',\n                        textOverflow: 'ellipsis',\n                      },\n                    }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </>\n        ) : (\n          <>\n            <img\n              style={{\n                width: 150,\n                maxHeight: 300,\n                marginBottom: '.625rem',\n                marginTop: '.625rem',\n              }}\n              src={empty}\n              alt=\"\"\n            ></img>\n            <Typography variant=\"h6\">Тут пока ничего нет</Typography>\n            <Typography color=\"textSecondary\">\n              Запланируйте новый опрос в форме слева.\n            </Typography>\n          </>\n        )\n      ) : (\n        <CircularProgress />\n      )}\n    </Body>\n  )\n}\nexport default Polls\n","import React from 'react'\nimport PollsList from './PollsList'\nimport { useSelector } from 'react-redux'\n\nconst PlannedPolls = () => {\n  const polls = useSelector(({ polls }) => polls.plannedPolls)\n  return <PollsList polls={polls} title=\"Запланированные опросы\"></PollsList>\n}\n\nexport default PlannedPolls\n","import React from 'react'\nimport PollsList from './PollsList'\nimport { useSelector } from 'react-redux'\n\nconst Archived = () => {\n  const polls = useSelector(({ polls }) => polls.archivedList)\n  return polls && polls.length > 0 ? (\n    <PollsList polls={polls} title=\"Завершенные опросы\"></PollsList>\n  ) : null\n}\n\nexport default Archived\n","import React from 'react'\nimport Select from 'react-select'\n\nexport default class MyAsyncSelect extends React.Component {\n  /* Select component reference can be used to get currently focused option */\n  getFocusedOption() {\n    return this.ref.select.state.focusedOption\n  }\n\n  /* we'll store lastFocusedOption as instance variable (no reason to use state) */\n  componentDidMount() {\n    this.lastFocusedOption = this.getFocusedOption()\n  }\n\n  /* Select component reference can be used to check if menu is opened */\n  isMenuOpen() {\n    return this.ref.select.state.isFocused\n  }\n\n  /* This function will be called after each user interaction (click, keydown, mousemove).\n     If menu is opened and focused value has been changed we will call onFocusedOptionChanged \n     function passed to this component using props. We do it asynchronously because onKeyDown\n     event is fired before the focused option has been changed.\n  */\n  onUserInteracted = () => {\n    Promise.resolve().then(() => {\n      const focusedOption = this.getFocusedOption()\n\n      if (\n        this.isMenuOpen() &&\n        this.lastFocusedOption !== focusedOption &&\n        focusedOption\n      ) {\n        this.lastFocusedOption = focusedOption\n        this.props.onFocusedOptionChanged(focusedOption)\n      }\n    })\n  }\n\n  /* in render we're setting onUserInteracted method as callback to different user interactions */\n  render() {\n    return (\n      <div onMouseMove={this.onUserInteracted} onClick={this.onUserInteracted}>\n        <Select\n          {...this.props}\n          ref={(ref) => (this.ref = ref)}\n          onKeyDown={this.onUserInteracted}\n        />\n      </div>\n    )\n  }\n}\n","/* eslint-disable */\n\nimport config from 'app/config'\n// import store from 'app/store'\n\nclass Api {\n  constructor(baseUri) {\n    this.baseUri = baseUri\n  }\n\n  /**\n   * Makes a redirect to the SSO if err status is 401, returns a Promise.reject\n   *\n   * @param {*} err\n   * @returns {Promise<Response>}\n   * @memberof Api\n   */\n  _handleError(err: any): Promise<Response> {\n    if (err.status === 401) {\n      // store.dispatch(signOut())\n    }\n\n    return Promise.reject(err)\n  }\n\n  /**\n   * Makes an api request, handles error status 401\n   *\n   * @param {string} endpoint - the endpoint, that gets appended to the (default) baseUri\n   * @param {?Object} [options={}] - custom request options, override default ones\n   * @param {?string} baseUri - custom baseUri\n   * @returns {Promise<any>}\n   * @memberof Api\n   */\n  request(\n    endpoint: string,\n    options: ?Object = {},\n    baseUri: ?string,\n    omitContentType = false,\n  ): Promise<any> {\n    console.log('request')\n\n    const dispatch = options.dispatch\n    // dispatch(incrementByAmount(100))\n\n    const BASE_URI: string = baseUri || this.baseUri\n\n    const jwt = localStorage.getItem('jwt')\n\n    const headers = new Headers({\n      Authorization: `Bearer ${jwt}`,\n    })\n\n    if (!omitContentType) {\n      headers.append('Content-Type', 'application/json')\n    }\n\n    const request = new Request(`${BASE_URI}${endpoint}`, {\n      headers,\n      credentials: 'include',\n      ...options,\n    })\n\n    // return this._handleError()\n\n    return fetch(request)\n      .then((r) => (r.ok ? r.json() : Promise.reject(r)))\n      .catch(this._handleError)\n  }\n}\n\nconst api = new Api(config.baseUri)\n\nexport default api\n","export default {\n  baseUri: 'http://polls.virushack.dns.army/public/api/v1',\n}\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport API from 'app/api'\n\n// async\nexport const searchAddresses = createAsyncThunk(\n  'addresses/searchAddresses',\n  async (q, { rejectWithValue, dispatch }) => {\n    try {\n      const response = await API.request(`/addresses?q=${q}`, { dispatch })\n      return response\n    } catch {\n      return rejectWithValue()\n    }\n  },\n)\n\n// reducers\nexport const addressesSlice = createSlice({\n  name: 'addresses',\n  initialState: {\n    list: [],\n    selected: [],\n    focusedOption: null,\n  },\n  reducers: {\n    selectAddresses: (state, { payload }) => {\n      state.selected = payload.addresses || []\n    },\n    setFocusedOption: (state, { payload }) => {\n      state.focusedOption = payload\n    },\n  },\n  extraReducers: {\n    [searchAddresses.fulfilled]: (state, { payload }) => {\n      const normalized = payload.map((address) => {\n        let [a, b] = address.location\n\n        ;[a, b] = [b, a]\n\n        return { ...address, location: [a, b] }\n      })\n      state.list = normalized\n      state.focusedOption = normalized[0]\n    },\n  },\n})\n\nexport const { selectAddresses, setFocusedOption } = addressesSlice.actions\nexport default addressesSlice.reducer\n","import React, { useEffect, useCallback } from 'react'\nimport Select from './Select'\nimport { useTheme } from 'styled-components'\nimport {\n  searchAddresses,\n  selectAddresses,\n  setFocusedOption,\n} from './addressesSlice'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst customStyles = {\n  control: (styles, state) => {\n    return {\n      ...styles,\n      padding: '.325rem',\n      border: `1px solid transparent`,\n      background: state.isFocused\n        ? state?.theme?.styledTheme?.palette?.secondary.main\n        : state?.theme?.styledTheme?.palette?.background.lightgrey,\n      color: state.isFocused\n        ? state?.theme?.styledTheme?.palette?.secondary.contrastText\n        : state?.theme?.styledTheme?.palette?.text.secondary,\n      fontFamily: state?.theme?.styledTheme?.fonts.primary,\n      '&:hover': state.isFocused\n        ? {}\n        : {\n            cursor: 'pointer',\n            borderColor: 'transparent',\n            background: state?.theme?.styledTheme?.palette?.background.grey,\n          },\n    }\n  },\n  menu: (styles, state) => ({\n    ...styles,\n    boxShadow: state?.theme?.styledTheme?.shadows.main,\n    fontFamily: state?.theme?.styledTheme?.fonts.primary,\n    background: state?.theme?.styledTheme?.palette?.background.primary,\n    overflow: 'hidden',\n    zIndex: 100,\n  }),\n  input: (styles) => ({ ...styles }),\n  placeholder: (styles) => ({ ...styles }),\n  singleValue: (styles, { data }) => ({ ...styles }),\n}\n\nconst mapAddresses = (addresses) =>\n  addresses.map((a) => ({ label: a.short_address, value: a.uuid, ...a }))\n\nconst Search = ({ style = {}, ...props }) => {\n  const theme = useTheme()\n  const dispatch = useDispatch()\n  const addresses = useSelector(({ addresses }) => addresses.list)\n\n  // const getOptions = useCallback(\n  //   async (q) => {\n  //     await dispatch(searchAddresses(q))\n  //     return mapAddresses(addresses)\n  //   },\n  //   [addresses, dispatch],\n  // )\n\n  const selectedAddresses = useSelector(({ addresses }) => addresses.selected)\n  const handleChange = (newSelected, { action }) => {\n    dispatch(selectAddresses({ addresses: newSelected }))\n  }\n\n  const onFocusedOptionChanged = useCallback(\n    (option) => {\n      dispatch(setFocusedOption(option))\n    },\n    [dispatch],\n  )\n\n  useEffect(() => {\n    dispatch(searchAddresses(''))\n  }, [dispatch])\n\n  return (\n    <Select\n      cacheOptions\n      defaultOptions\n      // loadOptions={getOptions}\n      isMulti\n      options={mapAddresses(addresses)}\n      styles={customStyles}\n      theme={(selectTheme) => ({\n        ...selectTheme,\n        borderRadius: 15,\n        styledTheme: theme,\n        fontFamily: theme.fonts.primary,\n        colors: {\n          ...selectTheme.colors,\n          primary25: theme.palette.secondary.lighter,\n          primary: theme.palette.secondary.main,\n        },\n      })}\n      value={mapAddresses(selectedAddresses)}\n      onChange={handleChange}\n      onFocusedOptionChanged={onFocusedOptionChanged}\n      {...props}\n    />\n  )\n}\n\nexport default Search\n","import { useState } from 'react'\n\nconst useInput = (initialValue, cb) => {\n  const [value, setValue] = useState(initialValue)\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(initialValue),\n    bind: {\n      value,\n      onChange: (event) => {\n        setValue(event.target.value)\n        if (cb) {\n          cb()\n        }\n      },\n    },\n  }\n}\n\nexport default useInput\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport API from 'app/api'\nimport { toast } from 'react-toastify'\n\n// async\nexport const createPoll = createAsyncThunk(\n  'polls/createPoll',\n  async (\n    { addresses, text, start_date, end_date },\n    { rejectWithValue, dispatch },\n  ) => {\n    try {\n      const response = await API.request('/polls', { method: 'POST', dispatch })\n      return Promise.resolve()\n    } catch {\n      return rejectWithValue()\n    }\n  },\n)\n\nexport const fetchCurrentPoll = createAsyncThunk(\n  'polls/fetchCurrentPoll',\n  async ({ uuid }, { rejectWithValue, dispatch }) => {\n    try {\n      const poll = await API.request(`/polls/${uuid}`, {\n        dispatch,\n      })\n      return { poll }\n    } catch {\n      return rejectWithValue()\n    }\n  },\n)\n\nexport const fetchArchivedPolls = createAsyncThunk(\n  'polls/fetchArchivedPolls',\n  async ({ uuid }, { rejectWithValue, dispatch }) => {\n    try {\n      const poll = await API.request('/polls', {\n        dispatch,\n      })\n      return { poll }\n    } catch {\n      return rejectWithValue()\n    }\n  },\n)\n\nexport const fetchPlannedPolls = createAsyncThunk(\n  'polls/fetchPlannedPolls',\n  async ({ uuid }, { rejectWithValue, dispatch }) => {\n    try {\n      const poll = await API.request('/polls', {\n        dispatch,\n      })\n      return { poll }\n    } catch {\n      return rejectWithValue()\n    }\n  },\n)\n\n// reducers\nexport const pollsSlice = createSlice({\n  name: 'polls',\n  initialState: {\n    plannedPolls: [\n      {\n        type: 'active',\n        text:\n          'Организация кворумов - Добрый день! 10.06.20 и 15.06.20 с 9 до 12 и с 18 до 20 каждая квартира сможет проголосовать. Вся информация по голосованию уже доступна в общедомовом чате. После сигнала назовите удобную дату и время для заполнения бюллетеня',\n        start_date: '2017-05-24T10:30',\n        end_date: '2017-05-24T11:30',\n        uuid: 1,\n      },\n      {\n        type: 'pending',\n        text: 'Оцените качество услуг РТК по десяти бальной шкале',\n        start_date: '2017-05-24T10:30',\n        end_date: '2017-05-24T11:30',\n        uuid: 2,\n      },\n    ],\n    archivedList: [\n      {\n        type: 'success',\n        text: 'Когда Вам удобно будет провести референдум?',\n        start_date: '2017-05-24T10:30',\n        end_date: '2017-05-24T11:30',\n        uuid: 3,\n      },\n      {\n        type: 'cancelled',\n        text: 'Оцените качество услуг РТК по десяти бальной шкале',\n        start_date: '2017-05-24T10:30',\n        end_date: '2017-05-24T11:30',\n        uuid: 4,\n      },\n    ],\n    current: null,\n  },\n  extraReducers: {\n    [createPoll.pending]: () => console.log('pending'),\n    [createPoll.fulfilled]: (state, { payload }) => {\n      toast.message('Новый опрос был успешно создан')\n    },\n    [createPoll.rejected]: () => console.log('rejected'),\n    [fetchCurrentPoll.fulfilled]: (state, { payload }) => {\n      state.current = payload\n    },\n    [fetchArchivedPolls.fulfilled]: (state, { payload }) => {\n      state.archivedList = payload.polls\n    },\n    [fetchPlannedPolls.fulfilled]: (state, { payload }) => {\n      state.planneddList = payload.polls\n    },\n  },\n})\n\n// export const {} = pollsSlice.actions\nexport default pollsSlice.reducer\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Typography, Button, Collapse, TextField } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Search from 'features/search'\nimport useInput from 'hooks/useInput'\nimport { createPoll } from './pollsSlice'\nimport { unwrapResult } from '@reduxjs/toolkit'\n\nconst Form = styled.form`\n  background: ${(p) => p.theme.palette.background.primary};\n  padding: 2rem;\n  /* border-right: 1px solid ${(p) => p.theme.palette.text.secondary};\n  border-bottom: 1px solid ${(p) => p.theme.palette.text.secondary}; */\n  display:grid;\n  grid-auto-flow:row;\n  box-shadow: ${(p) => p.theme.shadows.strong};\n  padding-bottom:.625rem;\n  z-index:2;\n`\n\nconst ButtonsWrapper = styled.div`\n  margin-left: auto;\n  margin-top: 0.325rem;\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 0.325rem;\n`\n\nconst Wrapper = styled.div`\n  display: grid;\n  margin-top: 0.325rem;\n  gap: 0.325rem;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr calc(420px + 0.325rem);\n  margin-bottom: 1rem;\n`\n\nconst NewPollForm = (props) => {\n  const dispatch = useDispatch()\n  const [isNew, setIsNew] = useState(false)\n\n  const selectedAddresses = useSelector(({ addresses }) => addresses.selected)\n  const {\n    value: startDate,\n    bind: bindStartDate,\n    reset: resetStartDate,\n  } = useInput('2017-05-24T10:30')\n  const { value: endDate, bind: bindEndDate, reset: resetEndDate } = useInput(\n    '2017-05-24T10:30',\n  )\n  const {\n    value: pollText,\n    bind: bindPollText,\n    reset: resetPollText,\n  } = useInput('')\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault()\n\n      const addresses = selectedAddresses.map((a) => a.uuid)\n\n      dispatch(createPoll({ addresses, startDate, endDate, text: pollText }))\n        .then(unwrapResult)\n        .then((ret) => {\n          resetStartDate()\n          resetEndDate()\n          resetPollText()\n          setIsNew(!isNew)\n        })\n    },\n    [\n      dispatch,\n      endDate,\n      isNew,\n      pollText,\n      resetEndDate,\n      resetPollText,\n      resetStartDate,\n      selectedAddresses,\n      startDate,\n    ],\n  )\n\n  return (\n    <Form onSubmit={handleSubmit} {...props}>\n      <Typography variant=\"h4\" gutterBottom color=\"primary\">\n        {isNew ? 'Новый опрос' : 'Поиск адресов'}\n      </Typography>\n\n      <Search placeholder=\"Поиск...\" />\n      <Collapse in={isNew}>\n        <Wrapper>\n          <div>\n            <Typography style={{ visibility: 'hidden' }} color=\"textSecondary\">\n              Опрос\n            </Typography>\n\n            <TextField\n              label=\"Текст опроса\"\n              name=\"body\"\n              multiline\n              fullWidth\n              {...bindPollText}\n            />\n          </div>\n          <div>\n            <Typography style={{ marginLeft: '.625rem' }} color=\"textSecondary\">\n              Диапазон времени\n            </Typography>\n            <TextField\n              label=\"C\"\n              type=\"datetime-local\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              style={{ margin: 0, width: '210px', marginRight: '.325rem' }}\n              {...bindStartDate}\n            />\n            <TextField\n              label=\"По\"\n              type=\"datetime-local\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              style={{ margin: 0, width: '210px' }}\n              {...bindEndDate}\n            />\n            <Typography color=\"textSecondary\">\n              Опрос будет производиться в указанные промежутки времени, пока не\n              будет получено ответа.\n            </Typography>\n          </div>\n        </Wrapper>\n      </Collapse>\n      <ButtonsWrapper>\n        {isNew && <Button type={isNew && 'submit'}>Запланировать опрос</Button>}\n        <Button\n          onClick={() => setIsNew(!isNew)}\n          color={isNew ? 'default' : 'secondary'}\n        >\n          {isNew ? 'Отмена' : 'Новый опрос'}\n        </Button>\n      </ButtonsWrapper>\n    </Form>\n  )\n}\n\nexport default NewPollForm\n","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { useTheme } from 'styled-components'\n\nconst PollChart = ({ data, ...props }) => {\n  const theme = useTheme()\n\n  return (\n    <div style={{ height: 250 }}>\n      <ResponsivePie\n        data={data}\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        colors={{ scheme: 'nivo' }}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n        radialLabelsSkipAngle={10}\n        radialLabelsTextXOffset={6}\n        radialLabelsTextColor=\"#333333\"\n        radialLabelsLinkOffset={0}\n        radialLabelsLinkDiagonalLength={16}\n        radialLabelsLinkHorizontalLength={24}\n        radialLabelsLinkStrokeWidth={1}\n        radialLabelsLinkColor={{ from: 'color' }}\n        slicesLabelsSkipAngle={10}\n        slicesLabelsTextColor=\"#333333\"\n        animate\n        motionStiffness={90}\n        motionDamping={15}\n        theme={{\n          fontFamily: theme.fonts.primary,\n        }}\n        defs={[\n          {\n            id: 'dots',\n            type: 'patternDots',\n            background: 'inherit',\n            color: 'rgba(255, 255, 255, 0.3)',\n            size: 4,\n            padding: 1,\n            stagger: true,\n          },\n          {\n            id: 'lines',\n            type: 'patternLines',\n            background: 'inherit',\n            color: 'rgba(255, 255, 255, 0.3)',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10,\n          },\n        ]}\n        fill={data?.map((x) =>\n          Math.random() > 0.5\n            ? {\n                match: {\n                  id: x.id,\n                },\n                id: 'dots',\n              }\n            : {\n                match: {\n                  id: x.id,\n                },\n                id: 'lines',\n              },\n        )}\n        legends={[\n          {\n            anchor: 'bottom',\n            direction: 'row',\n            translateY: 56,\n            itemWidth: 100,\n            itemHeight: 18,\n            itemTextColor: '#999',\n            symbolSize: 18,\n            symbolShape: 'circle',\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemTextColor: '#000',\n                },\n              },\n            ],\n          },\n        ]}\n      ></ResponsivePie>\n    </div>\n  )\n}\n\nexport default PollChart\n","import React, { useEffect, useCallback } from 'react'\nimport {\n  Drawer,\n  IconButton,\n  Typography,\n  CircularProgress,\n  Chip,\n  Button,\n} from '@material-ui/core'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { ArrowBack } from '@material-ui/icons'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { formatDate } from 'helpers'\nimport PollChart from './PollChart'\nimport { fetchCurrentPoll } from './pollsSlice'\n\nconst Page = styled.div`\n  padding: 2rem;\n  padding-top: 5rem;\n  display: grid;\n\n  /* grid-auto-rows: max-content; */\n  grid-template-rows: 1fr max-content;\n  grid-template-columns: 1fr;\n  align-items: end;\n  gap: 1rem;\n`\n\nconst ChipWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(70px, max-content));\n  gap: 0.325rem 0.125rem;\n`\n\nconst buttonTexts = {\n  success: 'Выгрузить бюллетень',\n  pending: 'Отменить оповещение',\n  active: 'Отменить оповещение',\n  cancelled: 'Перезапустить оповещение',\n}\n\nconst PollDrawer = ({ onClose }) => {\n  const { poll: pollUuid } = useParams()\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const poll = useSelector(({ polls }) => polls.current)\n\n  useEffect(() => {\n    dispatch(fetchCurrentPoll({ uuid: pollUuid }))\n  }, [dispatch, pollUuid])\n\n  const handleActionButtonClick = useCallback(() => {\n    switch (poll?.type) {\n      case 'success':\n      default:\n        break\n    }\n  }, [poll])\n\n  return (\n    <Drawer\n      onOpen={() => {}}\n      anchor=\"right\"\n      open={pollUuid}\n      onClose={() => history.push('/')}\n      elevation={20}\n      variant=\"persistent\"\n      PaperProps={{\n        style: {\n          width: 450,\n          border: 'none',\n          zIndex: 1,\n          // overflowX: 'hidden',\n        },\n      }}\n    >\n      {poll ? (\n        <Page>\n          <Typography\n            style={{ marginBottom: '-.825rem' }}\n            color=\"textSecondary\"\n          >\n            {formatDate(poll?.start_date)} - {formatDate(poll?.end_date)}\n          </Typography>\n\n          <Typography color=\"primary\" variant=\"h5\">\n            «{poll.text}»\n          </Typography>\n          {poll?.data && poll?.type === 'success' && (\n            <PollChart data={poll.data} />\n          )}\n\n          {poll?.addresses && (\n            <div>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Адреса проведения опроса:\n              </Typography>\n              {/* <Typography variant=\"body2\">\n                {poll?.addresses?.map((a) => a.short_address).join(', ')}\n              </Typography> */}\n              <ChipWrapper>\n                {poll?.addresses?.map((a) => (\n                  <Chip key={a.uuid} label={a.short_address} clickable />\n                ))}\n              </ChipWrapper>\n            </div>\n          )}\n        </Page>\n      ) : (\n        <CircularProgress\n          style={{ position: 'absolute', top: '50%', left: '50%' }}\n        />\n      )}\n\n      <IconButton\n        onClick={() => history.push('/')}\n        style={{ position: 'absolute', left: '2rem', top: '1rem' }}\n      >\n        <ArrowBack />\n      </IconButton>\n\n      {poll && (\n        <Button\n          onClick={handleActionButtonClick}\n          style={{ position: 'absolute', right: '2rem', top: '1rem' }}\n        >\n          {buttonTexts[poll?.type]}\n        </Button>\n      )}\n    </Drawer>\n  )\n}\n\nexport default PollDrawer\n","import React from 'react'\nimport { Button, Drawer } from '@material-ui/core'\nimport HomeTemplate from 'templates/Home'\nimport Map from 'features/map/Map'\n\nimport PlannedPolls from 'features/polls/PlannedPolls'\nimport ArchivedPolls from 'features/polls/ArchivedPolls'\nimport NewPollForm from 'features/polls/NewPollForm'\nimport PollDrawer from 'features/polls/PollDrawer'\n\nconst HomePage = () => {\n  return (\n    <HomeTemplate\n      left={\n        <>\n          <NewPollForm />\n\n          <Map\n            style={{\n              gridArea: 'map',\n              width: '100%',\n              height: '100%',\n            }}\n          />\n\n          {/* <Button\n            style={{ position: 'absolute', bottom: '2rem', right: '2rem' }}\n          >\n            Создать опрос\n          </Button> */}\n        </>\n      }\n    >\n      <PlannedPolls />\n      <ArchivedPolls />\n      <PollDrawer />\n    </HomeTemplate>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport HomePage from 'pages/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route component={HomePage} path=\"/poll/:poll\" />\r\n      <Route component={HomePage} path=\"/\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from '@reduxjs/toolkit'\n\nimport addresses from 'features/search/addressesSlice'\nimport polls from 'features/polls/pollsSlice'\n\nexport default combineReducers({\n  addresses,\n  polls,\n})\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport rootReducer from 'app/rootReducer'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n})\r\n\r\n// if (process.env.NODE_ENV === 'development' && module.hot) {\r\n//   module.hot.accept('./rootReducer', () => {\r\n//     const newRootReducer = require('./rootReducer').default\r\n//     store.replaceReducer(newRootReducer)\r\n//   })\r\n// }\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { css } from 'styled-components'\n\nexport default css`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    font-size: 16px;\n  }\n\n  html,\n  body,\n  #root {\n    height: 100%;\n  }\n\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n      'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n`\n","// @flow\n\nconst theme: Object = {}\n\ntheme.palette = {\n  primary: {\n    lighter: '#67578A',\n    main: '#2F195F',\n    contrastText: '#ffffff',\n    darker: '#1E103D',\n    gradient: 'linear-gradient(180deg, #584288 0%, #2F195F 100%)',\n  },\n  secondary: {\n    main: '#B1F8F2',\n    contrastText: '#2F195F',\n    darker: '#A1E2DC',\n    lighter: '#e2fffd',\n  },\n  error: {\n    main: '#BA274A',\n    lighter: '#BA274A',\n    darker: '#881D36',\n    contrastText: '#fff',\n  },\n  success: {\n    main: '#136F63',\n    contrastText: '#fff',\n  },\n  text: {\n    primary: '#02111B',\n    secondary: '#6B717E77',\n  },\n  background: {\n    lightgrey: '#F7F6FB',\n    grey: '#e2e1e8',\n    primary: '#ffffff',\n  },\n}\n\ntheme.fonts = {\n  primary:\n    '\"Futura PT\", \"Source Sans Pro\", Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n}\n\ntheme.shadows = {\n  main: '0 3px 15px 2px rgba(0, 0, 0, 0.05)',\n  strong: 'rgba(0, 0, 0, 0.2) 0px 35px 50px -30px',\n  buttonPrimary: '0 4px 12px #B1F8F235',\n  card: '0 4px 20px #2F195F33',\n}\n\ntheme.sizes = {\n  maxWidth: '97.5%',\n  bigFont: '1.6071428571428572rem',\n  mediumFont: '1rem',\n  smallFont: '.825rem',\n  tinyFont: '.625rem',\n  scale: [\n    '0.125rem',\n    '0.325rem',\n    '0.625rem',\n    '0.825rem',\n    '1rem',\n    '1.125rem',\n    '1.325rem',\n    '1.625rem',\n    '2rem',\n    '2.625rem',\n    '4rem',\n  ],\n  tablet: '768px',\n  screen: '1024px',\n  bigScreen: '1366px',\n  wideScreen: '1690px',\n  borderRadius: '8px',\n}\n\nexport default theme\n","// @flow\nimport theme from './default'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst MuiTheme = createMuiTheme({\n  typography: {\n    fontFamily: theme.fonts.primary,\n  },\n  palette: {\n    primary: {\n      light: theme.palette.primary.lighter,\n      main: theme.palette.primary.main,\n      dark: theme.palette.primary.darker,\n      contrastText: theme.palette.primary.contrastText,\n    },\n    secondary: {\n      light: theme.palette.secondary.lighter,\n      main: theme.palette.secondary.main,\n      dark: theme.palette.secondary.darker,\n      contrastText: theme.palette.secondary.contrastText,\n    },\n    error: {\n      light: theme.palette.error.lighter,\n      main: theme.palette.error.main,\n      dark: theme.palette.error.darker,\n      contrastText: theme.palette.error.contrastText,\n    },\n\n    text: {\n      primary: theme.palette.text.primary,\n      secondary: theme.palette.text.secondary,\n    },\n  },\n  props: {\n    MuiFilledInput: {\n      disableUnderline: true,\n    },\n    MuiTextField: {\n      variant: 'filled',\n    },\n    MuiButton: {\n      size: 'large',\n      variant: 'contained',\n      color: 'secondary',\n    },\n    MuiButtonBase: {\n      disableRipple: true, // No more ripple, on the whole application 💣!,\n      variant: 'contained',\n    },\n  },\n  overrides: {\n    MuiButton: {\n      root: { borderRadius: 15, textTransform: 'none' },\n      contained: {\n        boxShadow: 'none !important',\n      },\n    },\n    MuiTypography: {\n      root: { color: theme.palette.text.primary },\n    },\n    MuiBackdrop: {\n      root: {\n        backgroundColor: theme.palette.primary.darker + 11,\n        backdropFilter: 'blur(10px)',\n      },\n    },\n    MuiDrawer: {\n      paper: {\n        boxShadow: theme.shadows.strong,\n      },\n    },\n    MuiChip: {\n      root: {\n        borderRadius: 12,\n      },\n    },\n    MuiList: {\n      root: {\n        padding: '0 !important',\n        borderRadius: 20,\n        overflow: 'hidden',\n      },\n    },\n    MuiDialogTitle: {\n      root: {\n        textAlign: 'center',\n      },\n    },\n    MuiInput: {\n      root: {},\n      underline: {\n        '&:not($error):after': {\n          borderColor: theme.palette.text.primary,\n        },\n        '&:hover:not($error):after': {\n          borderColor: theme.palette.text.primary,\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        borderRadius: '15px !important',\n        background: 'transparent !important',\n        border: `${theme.palette.background.lightgrey} 2px solid`,\n        // '&$focused': {\n        //   border: `${theme.palette.primary.lighter} 2px solid `,\n        // },\n      },\n      input: {\n        padding: '1.325rem .625rem .325rem',\n      },\n      multiline: {\n        padding: '1.325rem .625rem .325rem !important',\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        // color: 'white',\n        fontWeight: 600,\n        borderRadius: 4,\n        backgroundColor: theme.palette.text.primary,\n        color: theme.palette.primary.contrastText,\n      },\n    },\n    MuiListItem: {\n      button: {\n        '&:hover': {\n          background: `${theme.palette.background.lightgrey} !important`,\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: 44,\n      },\n      scrollable: {\n        '&::-webkit-scrollbar': {\n          display: 'none',\n        },\n      },\n      indicator: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        '& > div': {\n          maxWidth: 40,\n          width: '100%',\n          backgroundColor: theme.palette.secondary.main,\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        padding: 0,\n        textTransform: 'uppercase',\n        color: '#fff',\n        fontWeight: 500,\n        fontSize: '0.825rem !important',\n        letterSpacing: '0.125rem',\n        minWidth: 'unset !important',\n        marginRight: '2rem',\n        minHeight: 44,\n        '&:focus': {\n          opacity: 1,\n        },\n        '&:hover': {\n          opacity: 1,\n          color: theme.palette.primary.main,\n        },\n      },\n      labelContainer: {\n        padding: '0 !important',\n      },\n    },\n  },\n})\n\nexport default MuiTheme\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app/App'\r\nimport store from 'app/store'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\n\r\nimport 'index.css'\r\n\r\nimport globalStyles from './theme/global'\r\nimport defaultTheme from './theme/default'\r\nimport muiTheme from './theme/mui'\r\n\r\nconst GlobalStyle = createGlobalStyle(globalStyles)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <ThemeProvider theme={defaultTheme}>\r\n          <MuiThemeProvider theme={muiTheme}>\r\n            <App />\r\n            <GlobalStyle />\r\n          </MuiThemeProvider>\r\n        </ThemeProvider>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}